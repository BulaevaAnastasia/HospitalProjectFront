[{"/Users/anastasia/Documents/Work/project2.0/front3.0/src/index.js":"1","/Users/anastasia/Documents/Work/project2.0/front3.0/src/App.js":"2","/Users/anastasia/Documents/Work/project2.0/front3.0/src/reportWebVitals.js":"3","/Users/anastasia/Documents/Work/project2.0/front3.0/src/pages/RegistrationUser.jsx":"4","/Users/anastasia/Documents/Work/project2.0/front3.0/src/pages/AppointmentPage.jsx":"5","/Users/anastasia/Documents/Work/project2.0/front3.0/src/pages/AuthorizationUser.jsx":"6","/Users/anastasia/Documents/Work/project2.0/front3.0/src/components/Header.jsx":"7","/Users/anastasia/Documents/Work/project2.0/front3.0/src/components/FormAuth.jsx":"8","/Users/anastasia/Documents/Work/project2.0/front3.0/src/components/FormReg.jsx":"9","/Users/anastasia/Documents/Work/project2.0/front3.0/src/components/AddApointment.jsx":"10"},{"size":500,"mtime":1637333380000,"results":"11","hashOfConfig":"12"},{"size":716,"mtime":1638192059000,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1637333380000,"results":"14","hashOfConfig":"12"},{"size":775,"mtime":1638263714000,"results":"15","hashOfConfig":"12"},{"size":324,"mtime":1638883367679,"results":"16","hashOfConfig":"12"},{"size":719,"mtime":1638784074395,"results":"17","hashOfConfig":"12"},{"size":781,"mtime":1638192120000,"results":"18","hashOfConfig":"12"},{"size":1661,"mtime":1638282035000,"results":"19","hashOfConfig":"12"},{"size":2409,"mtime":1638879799411,"results":"20","hashOfConfig":"12"},{"size":2572,"mtime":1638883153521,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"zrwq06",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anastasia/Documents/Work/project2.0/front3.0/src/index.js",[],["45","46"],"/Users/anastasia/Documents/Work/project2.0/front3.0/src/App.js",[],"/Users/anastasia/Documents/Work/project2.0/front3.0/src/reportWebVitals.js",[],"/Users/anastasia/Documents/Work/project2.0/front3.0/src/pages/RegistrationUser.jsx",[],"/Users/anastasia/Documents/Work/project2.0/front3.0/src/pages/AppointmentPage.jsx",[],"/Users/anastasia/Documents/Work/project2.0/front3.0/src/pages/AuthorizationUser.jsx",[],"/Users/anastasia/Documents/Work/project2.0/front3.0/src/components/Header.jsx",[],"/Users/anastasia/Documents/Work/project2.0/front3.0/src/components/FormAuth.jsx",["47"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\n\nconst FormAuth = () => {\n\n    const url = 'http://localhost:8000';\n\n    const { handleSubmit, register, formState: { errors } } = useForm();\n\n    const [login, setLogin] = useState();\n    const [password, setPassword] = useState();\n\n    const authorizationUser = async (data) => {\n        await axios.post(`${url}/authorizationUser`, {\n            login: data.login,\n            password: data.password,\n        }).then((result)=> {\n            history.push('/home')\n        }).catch((e) => {\n            console.log(\"e\",e.message)\n        });\n    }\n\n    const history = useHistory();\n\n    const setReg = () => {\n        history.push('/registration')\n      }\n\n    return (\n        <>\n          <form onSubmit={handleSubmit((data) => authorizationUser(data))}>\n            <h2>Войти в систему</h2>\n\n            <label>Login:</label>\n            <input type=\"text\" value={login} onChange={(e) => setLogin(e.target.value)} placeholder=\"Login\" {...register(\"login\", { required: true, minLength: { value: 6 } })} />\n\n            <label>Password:</label>\n            <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\"{...register(\"password\", { required: true, minLength: { value: 6 }, pattern: /[A-Za-z].*\\d|\\d.*[A-Za-z]/ })} />\n\n            <button type=\"submit\">Войти</button>\n            <button onClick={() => setReg()}>Зарегистрироваться</button>\n\n          </form>  \n        </>\n    )\n}\n\nexport default FormAuth\n","/Users/anastasia/Documents/Work/project2.0/front3.0/src/components/FormReg.jsx",["48","49","50"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport Cookies from 'js-cookie';\n\nconst FormReg = () => {\n\n    const url = 'http://localhost:8000';\n\n    const { handleSubmit, register, getValues, formState: { errors } } = useForm();\n\n    const [login, setLogin] = useState();\n    const [password, setPassword] = useState();\n    const [repPassword, setRepPassword] = useState();\n    const [userDef, setUserDef] = useState(false);\n\n    const history = useHistory(); \n\n    const createNewUser = async (data) => {\n        await axios.post(`${url}/saveUser`, {\n            login: data.login,\n            password: data.password,\n        }).then(res => {\n          Cookies.set('token', res.data.token)\n          Cookies.set('id', res.data.id)\n          history.push('/appointments');\n        }).catch((e) => {\n            if (e.response.status === 402) {\n                userNotDef()\n            }\n        })\n    }\n\n    const userNotDef = () => {\n        setUserDef(true)\n        setTimeout(() => {\n            setUserDef(false)\n        },4000)\n    }\n\n    const setAuto = () => {\n        history.push('/autorization')\n    }\n\n    return (\n        <>\n\n        <form onSubmit={handleSubmit((data) => createNewUser(data))} >\n            <h2>Регистрация</h2>\n\n            <label>Login:</label>\n            <input \n                type=\"text\" \n                value={login} \n                onChange={(e) => setLogin(e.target.value)} \n                placeholder=\"Login\"\n            />\n\n            <label>Password:</label>\n            <input \n                type=\"password\" \n                value={password} \n                onChange={(e) => setPassword(e.target.value)} \n            />\n\n            <label>Repeat password:</label>\n            <input \n                type=\"password\" \n                value={repPassword} \n                onChange={(e) => setRepPassword(e.target.value)} \n            />\n\n            <button type=\"submit\">Зарегистрироваться</button>\n            <button onClick={() => setAuto()}>Авторизоваться</button>\n\n            {userDef ? (\n              <div>Пользователь с таким логином уже существует!</div>\n            ) : null}\n        </form>\n            \n        </>\n    )\n}\n\nexport default FormReg;\n","/Users/anastasia/Documents/Work/project2.0/front3.0/src/components/AddApointment.jsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":10,"column":50,"nodeType":"57","messageId":"58","endLine":10,"endColumn":56},{"ruleId":"55","severity":1,"message":"59","line":11,"column":27,"nodeType":"57","messageId":"58","endLine":11,"endColumn":35},{"ruleId":"55","severity":1,"message":"60","line":11,"column":37,"nodeType":"57","messageId":"58","endLine":11,"endColumn":46},{"ruleId":"55","severity":1,"message":"56","line":11,"column":61,"nodeType":"57","messageId":"58","endLine":11,"endColumn":67},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'register' is assigned a value but never used.","'getValues' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]